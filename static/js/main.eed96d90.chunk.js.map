{"version":3,"sources":["components/NavBar/NavBar.jsx","components/Dashboard/Range.jsx","components/Dashboard/filterData.js","components/Dashboard/PieChartOut.jsx","components/Dashboard/PieChartIn.jsx","components/Dashboard/ProfitLoss.jsx","app/balanceSlice.js","components/Dashboard/Balance.jsx","components/Dashboard/RecentProfitLoss.jsx","components/Dashboard/Dashboard.jsx","components/CashIn/InCategory.jsx","components/CashIn/cashInSlice.js","components/CashIn/cashInDataEg.js","app/categorySlice.js","components/CashIn/CashIn.jsx","components/CashOut/OutCategory.jsx","components/CashOut/cashOutSlice.js","components/CashOut/cashOutDataEg.js","components/CashOut/CashOut.jsx","components/Report/Report.jsx","img/appreciate.svg","App.js","app/store.js","serviceWorker.js","index.js"],"names":["navigation","path","profile","classNames","classes","filter","Boolean","join","NavBar","location","useLocation","as","className","open","src","alt","map","item","itemIdx","pathname","to","Button","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","show","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Items","static","Item","active","Panel","rangeList","Range","prop","selected","range","onRangeChange","value","onChange","Label","Options","rangeInMap","index","Option","filterData","rangedData","category","data","rangedCategory","length","i","groupData","el","push","amountSum","reduce","sum","curData","amount","backgroundColor","hoverBackgroundColor","PieChartOut","props","cashOutCategory","useSelector","state","rangedCashOutData","cashData","cleanData","pieState","labels","datasets","label","options","title","display","text","fontSize","legend","position","hoverOffset","p","c","PieChartIn","cashInCategory","rangedCashInData","ProfitLoss","cashInData","cashOutData","calProLossArr","totalSumIn","totalSumOut","prolossData","balanceSlice","createSlice","name","initialState","reducers","updateBalance","action","payload","setBalance","actions","Balance","dispatch","useDispatch","balance","useState","isEdit","setIsEdit","updateRef","useRef","onClick","type","ref","placeholder","updateValue","current","alert","handleUpdate","currentMonth","Date","getMonth","calRecentMonth","diff","date","setMonth","toLocaleString","month","recentMonths","RecentProfitLoss","cashInOut","lineState","lineTension","borderColor","borderWidth","diffArr","Dashboard","setRange","InCategory","selectedCategory","setSelectedCategory","reference","detail","toDateString","cashInSlice","addCashIn","categorySlice","addCashInCategory","addCashOutCategory","initialForm","CashIn","alertRef","successRef","form","setForm","showAlert","setShowAlert","showSuccess","setShowSuccess","useEffect","hideTimeOut","style","setTimeout","clearTimeout","categoryName","prompt","addNewCategory","id","e","target","htmlFor","rows","cols","newRecord","saveRecord","OutCategory","cashOutSlice","addCashOut","CashOut","Report","reportType","setReportType","fromDateRef","toDateRef","filteredData","setFilteredData","hidden","fromValueString","toValueString","fromValue","toValue","scope","transaction","App","exact","appreciate","combineReducers","cashInReducer","cashOutReducer","store","configureStore","reducer","balanceReducer","categoryReducer","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eed96d90.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\r\nimport { Disclosure, Menu, Transition } from '@headlessui/react'\r\nimport { MenuIcon, XIcon } from '@heroicons/react/outline'\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\n\r\nconst navigation = ['Dashboard', 'Cash In', 'Cash Out', 'Report'];\r\nconst path = ['/dashboard','/cashin','/cashout', '/report'];\r\nconst profile = ['Your Profile', 'Settings', 'Sign out'];\r\n\r\nfunction classNames(...classes) {\r\n    return classes.filter(Boolean).join(' ')\r\n}\r\n\r\nexport const NavBar = () => {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <div>\r\n            <Disclosure as=\"nav\" className=\"bg-gray-800\">\r\n                {({ open }) => (\r\n                    <>\r\n                        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n                            <div className=\"flex items-center justify-between h-16\">\r\n                                <div className=\"flex items-center\">\r\n                                    <div className=\"flex-shrink-0\">\r\n                                        <img\r\n                                            className=\"h-8 w-8\"\r\n                                            src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg\"\r\n                                            alt=\"Workflow\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"hidden md:block\">\r\n                                        <div className=\"ml-10 flex items-baseline space-x-4\">\r\n                                            {navigation.map((item, itemIdx) =>\r\n                                                location.pathname === path[itemIdx] ? (\r\n                                                    <Fragment key={itemIdx}>\r\n                                                        {/* Current: \"bg-gray-900 text-white\", Default: \"text-gray-300 hover:bg-gray-700 hover:text-white\" */}\r\n\r\n                                                        <Link to={path[itemIdx]}>\r\n                                                            <span\r\n                                                                className=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium\"\r\n                                                            >\r\n                                                                {item}\r\n                                                            </span>\r\n                                                        </Link>\r\n                                                    </Fragment>\r\n                                                ) : (\r\n\r\n                                                    <Link to={path[itemIdx]} key={itemIdx}>\r\n                                                        <span\r\n                                                            className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\"\r\n                                                        >\r\n                                                            {item}\r\n                                                        </span>\r\n                                                    </Link>\r\n                                                )\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"hidden md:block\">\r\n                                    <div className=\"ml-4 flex items-center md:ml-6\">\r\n\r\n                                        {/* Profile dropdown */}\r\n                                        <Menu as=\"div\" className=\"ml-3 relative\">\r\n                                            {({ open }) => (\r\n                                                <>\r\n                                                    <div>\r\n                                                        <Menu.Button className=\"max-w-xs bg-gray-800 rounded-full flex items-center text-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\r\n                                                            <span className=\"sr-only\">Open user menu</span>\r\n                                                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\">\r\n                                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n                                                            </svg>\r\n                                                        </Menu.Button>\r\n                                                    </div>\r\n                                                    <Transition\r\n                                                        show={open}\r\n                                                        as={Fragment}\r\n                                                        enter=\"transition ease-out duration-100\"\r\n                                                        enterFrom=\"transform opacity-0 scale-95\"\r\n                                                        enterTo=\"transform opacity-100 scale-100\"\r\n                                                        leave=\"transition ease-in duration-75\"\r\n                                                        leaveFrom=\"transform opacity-100 scale-100\"\r\n                                                        leaveTo=\"transform opacity-0 scale-95\"\r\n                                                    >\r\n                                                        <Menu.Items\r\n                                                            static\r\n                                                            className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\"\r\n                                                        >\r\n                                                            {profile.map((item) => (\r\n                                                                <Menu.Item key={item}>\r\n                                                                    {({ active }) => (\r\n                                                                        <span\r\n                                                                            className={classNames(\r\n                                                                                active ? 'bg-gray-100' : '',\r\n                                                                                'block px-4 py-2 text-sm text-gray-700'\r\n                                                                            )}\r\n                                                                        >\r\n                                                                            {item}\r\n                                                                        </span>\r\n                                                                    )}\r\n                                                                </Menu.Item>\r\n                                                            ))}\r\n                                                        </Menu.Items>\r\n                                                    </Transition>\r\n                                                </>\r\n                                            )}\r\n                                        </Menu>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"-mr-2 flex md:hidden\">\r\n                                    {/* Mobile menu button */}\r\n                                    <Disclosure.Button className=\"bg-gray-800 inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\r\n                                        <span className=\"sr-only\">Open main menu</span>\r\n                                        {open ? (\r\n                                            <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                                        ) : (\r\n                                            <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                                        )}\r\n                                    </Disclosure.Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/*check*/}\r\n                        <Disclosure.Panel className=\"md:hidden\">\r\n                            <div className=\"px-2 pt-2 pb-3 space-y-1 sm:px-3\">\r\n                                {navigation.map((item, itemIdx) =>\r\n                                    location.pathname === path[itemIdx] ? (\r\n                                        <Fragment key={itemIdx}>\r\n                                            {/* Current: \"bg-gray-900 text-white\", Default: \"text-gray-300 hover:bg-gray-700 hover:text-white\" */}\r\n                                            <Link to={path[itemIdx]}>\r\n                                                <span\r\n                                                    className=\"bg-gray-900 text-white block px-3 py-2 rounded-md text-base font-medium\"\r\n                                                >\r\n                                                    {item}\r\n                                                </span>\r\n                                            </Link>\r\n                                        </Fragment>\r\n                                    ) : (\r\n                                        <Link to={path[itemIdx]} key={itemIdx}>\r\n                                            <span\r\n                                                className=\"text-gray-300 hover:bg-gray-700 hover:text-white block px-3 py-2 rounded-md text-base font-medium\"\r\n                                            >\r\n                                                {item}\r\n                                            </span>\r\n                                        </Link>\r\n                                    )\r\n                                )}\r\n                            </div>\r\n\r\n\r\n                            <div className=\"pt-4 pb-3 border-t border-gray-700\">\r\n                                <div className=\"flex items-center px-5\">\r\n                                    <div className=\"flex-shrink-0\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\">\r\n                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n                                        </svg>\r\n                                    </div>\r\n                                    <div className=\"ml-3\">\r\n                                        <div className=\"text-base font-medium leading-none text-white\">Steve Job</div>\r\n                                        <div className=\"text-sm font-medium leading-none text-gray-400\">steve@gmail.com</div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"mt-3 px-2 space-y-1\">\r\n                                    {profile.map((item) => (\r\n                                        <span\r\n                                            key={item}\r\n                                            className=\"block px-3 py-2 rounded-md text-base font-medium text-gray-400 hover:text-white hover:bg-gray-700\"\r\n                                        >\r\n                                            {item}\r\n                                        </span>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </Disclosure.Panel>\r\n                    </>\r\n                )}\r\n            </Disclosure>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","/* This example requires Tailwind CSS v2.0+ */\r\nimport { Fragment } from 'react'\r\nimport { Listbox, Transition } from '@headlessui/react'\r\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid'\r\n\r\nconst rangeList = ['This Month', 'Last Month', 'Last Three Month'];\r\n\r\nfunction classNames(...classes) {\r\n    return classes.filter(Boolean).join(' ')\r\n}\r\n\r\n//main render\r\nexport const Range = prop => {\r\n    const { range: selected, onRangeChange } = prop;\r\n\r\n\r\n    return (\r\n        <div className=\"lg:w-1/6\">\r\n            <Listbox value={selected} onChange={onRangeChange}>\r\n                {({ open }) => (\r\n                    <>\r\n                        <Listbox.Label className=\"block text-sm font-medium text-gray-700\">Range</Listbox.Label>\r\n                        <div className=\"mt-1 relative\">\r\n                            <Listbox.Button className=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\">\r\n                                <span className=\"flex items-center\">\r\n                                    <span className=\"ml-3 block truncate\">{selected}</span>\r\n                                </span>\r\n                                <span className=\"ml-3 absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\r\n                                    <SelectorIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\r\n                                </span>\r\n                            </Listbox.Button>\r\n\r\n                            <Transition\r\n                                show={open}\r\n                                as={Fragment}\r\n                                leave=\"transition ease-in duration-100\"\r\n                                leaveFrom=\"opacity-100\"\r\n                                leaveTo=\"opacity-0\"\r\n                            >\r\n                                <Listbox.Options\r\n                                    static\r\n                                    className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-56 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\r\n                                >\r\n                                    {rangeList.map((rangeInMap,index) => (\r\n                                        <Listbox.Option\r\n                                            key={index}\r\n                                            className={({ active }) =>\r\n                                                classNames(\r\n                                                    active ? 'text-white bg-indigo-600' : 'text-gray-900',\r\n                                                    'cursor-default select-none relative py-2 pl-3 pr-9'\r\n                                                )\r\n                                            }\r\n                                            value={rangeInMap}\r\n                                        >\r\n                                            {({ selected, active }) => (\r\n                                                <>\r\n                                                    <div className=\"flex items-center\">\r\n                                                        <span className={classNames(selected ? 'font-semibold' : 'font-normal', 'ml-3 block truncate')} >\r\n                                                            {rangeInMap}\r\n                                                        </span>\r\n                                                    </div>\r\n\r\n                                                    {selected ? (\r\n                                                        <span\r\n                                                            className={classNames(\r\n                                                                active ? 'text-white' : 'text-indigo-600',\r\n                                                                'absolute inset-y-0 right-0 flex items-center pr-4'\r\n                                                            )}\r\n                                                        >\r\n                                                            <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                                                        </span>\r\n                                                    ) : null}\r\n                                                </>\r\n                                            )}\r\n                                        </Listbox.Option>\r\n                                    ))}\r\n                                </Listbox.Options>\r\n                            </Transition>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </Listbox>\r\n        </div>\r\n    )\r\n}\r\n","export const filterData = (rangedData,category) => {\r\n\r\n    let data = [];\r\n    let rangedCategory = [];\r\n\r\n    if (rangedData.length > 0) {\r\n        //summing each cashIn category's amount\r\n        for (let i = 0; i < category.length; i++) {\r\n            let groupData = rangedData.filter(el => el.category === category[i]);\r\n\r\n            if (groupData.length !== 0) {\r\n                rangedCategory.push(groupData[0].category);\r\n                const amountSum = groupData.reduce((sum,curData) => ({amount: sum.amount + curData.amount}));\r\n                data.push(amountSum.amount);\r\n            }\r\n        }\r\n        return { data, rangedCategory };\r\n    }\r\n}","import React from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport { useSelector } from 'react-redux';\r\nimport { filterData } from './filterData';\r\n\r\n//could be better by picking random colour according to num of data set \r\nconst backgroundColor = ['#8464a0', '#0a407a', '#C9DE00', '#2086ec', '#00A6B4', '#6800B4', '#cea9bc'];\r\nconst hoverBackgroundColor = ['#532d75', '#082a4f', '#4B5000', '#145391', '#003350', '#35014F', '#99607e'];\r\n\r\nexport const PieChartOut = props => {\r\n    const { cashOutCategory } = useSelector(state => state.category);\r\n    const { cashData: rangedCashOutData } = props;\r\n    const cleanData = filterData(rangedCashOutData, cashOutCategory);\r\n    //pie data\r\n    const pieState = {\r\n        labels: cleanData.rangedCategory,\r\n        datasets: [{\r\n            label: 'Expenses',\r\n            backgroundColor,\r\n            hoverBackgroundColor,\r\n            data: cleanData.data\r\n        }]\r\n    }\r\n\r\n    //main render\r\n    return (\r\n        <div className=\"mt-5\">\r\n            <h3 className=\"font-bold text-xl\">Expenses</h3>\r\n\r\n            <div className=\"h-72 w-72 shadow-sm rounded-xl hover:shadow-lg transition-shadow \">\r\n                <Doughnut\r\n                    data={pieState}\r\n                    options={{\r\n                        title: {\r\n                            display: true,\r\n                            text: 'Expenses',\r\n                            fontSize: 20\r\n                        },\r\n                        legend: {\r\n                            display: true,\r\n                            position: 'right'\r\n                        },\r\n                        hoverOffset: 6\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <h3 className=\"font-bold mt-2 text-2xl\">Total: <span>{cleanData.data.reduce((p, c) => p + c)}</span> MYR</h3>\r\n        </div>\r\n    );\r\n\r\n\r\n}","import React from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport { useSelector } from 'react-redux';\r\nimport { filterData } from './filterData';\r\n\r\n\r\nconst backgroundColor = ['#006a4e', '#797df6', '#8abaae', '#4adede', '#1aa6ec', '#1e2e97'];\r\nconst hoverBackgroundColor = ['#00523c', '#5659c7', '#699187', '#3ca3a3', '#147eb3', '#121c5e'];\r\n\r\nexport const PieChartIn = props => {\r\n    const { cashInCategory } = useSelector(state => state.category);\r\n    const { cashData: rangedCashInData } = props;\r\n    const cleanData = filterData(rangedCashInData,cashInCategory);\r\n    //pie data\r\n    const pieState = {\r\n        labels: cleanData.rangedCategory,\r\n        datasets: [{\r\n            label: 'Gross Profit',\r\n            backgroundColor,\r\n            hoverBackgroundColor,\r\n            data: cleanData.data\r\n        }]\r\n    }\r\n\r\n    //main render\r\n    return (\r\n        <div className=\"mt-5\">\r\n            <h3 className=\"font-bold text-xl\">Gross Profit</h3>\r\n\r\n            <div className=\"h-72 w-72 shadow-sm rounded-xl hover:shadow-lg transition-shadow \">\r\n                <Doughnut\r\n                    data={pieState}\r\n                    options={{\r\n                        title: {\r\n                            display: true,\r\n                            text: 'Gross Profit',\r\n                            fontSize: 20\r\n                        },\r\n                        legend: {\r\n                            display: true,\r\n                            position: 'right'\r\n                        },\r\n                        hoverOffset: 6\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <h3 className=\"font-bold mt-2 text-2xl\">Total: <span>{cleanData.data.reduce((p, c) => p + c)}</span> MYR</h3>\r\n        </div>\r\n    );\r\n\r\n\r\n}","import React from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nconst backgroundColor = ['#8abaae', '#FF6961'];\r\nconst hoverBackgroundColor = ['#699187', '#bd534d'];\r\n\r\n\r\n\r\nexport const ProfitLoss = props => {\r\n    const { cashInData, cashOutData } = props;\r\n\r\n    const calProLossArr = () => {\r\n        const totalSumIn = cashInData.reduce((sum,curData) => ({amount: sum.amount + curData.amount}));\r\n        const totalSumOut = cashOutData.reduce((sum,curData) => ({amount: sum.amount + curData.amount}));\r\n        return [totalSumIn.amount,totalSumOut.amount];\r\n    }\r\n\r\n    const prolossData = {\r\n        labels: ['Profit', 'Loss'],\r\n        datasets: [{\r\n            label: 'Profit/Loss',\r\n            backgroundColor,\r\n            hoverBackgroundColor,\r\n            data: calProLossArr()\r\n        }]\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-5\">\r\n            <h3 className=\"font-bold text-xl\">Profit vs Loss</h3>\r\n\r\n            <div className=\"h-64 w-64 shadow-sm rounded-xl hover:shadow-lg transition-shadow \">\r\n                <Pie\r\n                    data={prolossData}\r\n                    options={{\r\n                        title: {\r\n                            display: true,\r\n                            text: 'Profit.vs.Loss',\r\n                            fontSize: 20\r\n                        },\r\n                        legend: {\r\n                            display: true,\r\n                            position: 'right'\r\n                        },\r\n                        hoverOffset: 6\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <h3 className=\"font-bold mt-2 text-2xl\">Profit: <span>{calProLossArr().reduce((p,c) => p - c)}</span> MYR</h3>\r\n        </div>\r\n    )\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = 4300;\r\n\r\nconst balanceSlice = createSlice({\r\n    name: 'balance',\r\n    initialState,\r\n    reducers: {\r\n        updateBalance: (state,action) => {\r\n            return state += action.payload;\r\n        },\r\n        setBalance: (state,action) => {\r\n            return action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport const { updateBalance, setBalance } = balanceSlice.actions;\r\nexport default balanceSlice.reducer;","import React, { useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setBalance } from '../../app/balanceSlice';\r\n\r\n\r\nexport const Balance = () => {\r\n    const dispatch = useDispatch();\r\n    const { balance } = useSelector(state => state);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const updateRef = useRef(null);\r\n\r\n    //event func\r\n    //on balance updated\r\n    const handleUpdate = () => {\r\n        const updateValue = +updateRef.current.value;\r\n        if (updateValue) {\r\n            dispatch(setBalance(updateValue));\r\n            setIsEdit(false);\r\n        }else alert('Invalid Amount');\r\n    }\r\n\r\n    //render balance amount\r\n    const renderBalance = () => {\r\n        if (!isEdit) {\r\n            return <h3 className=\"font-bold text-3xl\">{balance}<span> MYR</span></h3>\r\n        }\r\n        else return (\r\n            <div className=\"flex flex-wrap justify-between md:flex-row bg-gray-500 p-1 rounded-lg\">\r\n                <input type=\"number\" ref={updateRef} className=\"m-1 p-2 appearance-none text-gray-700 text-sm focus:outline-none\" placeholder=\"Enter balance\" />\r\n                <button\r\n                    className=\"w-full m-1 p-2 text-sm bg-gray-800 text-white rounded-lg font-semibold uppercase lg:w-auto\"\r\n                    onClick={() => handleUpdate()}>\r\n                    update\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //main render\r\n    return (\r\n        <div className=\"mt-5\">\r\n            <div>\r\n                <h3 className=\"font-bold text-xl inline-block align-middle\">Current Balance</h3>\r\n                <button className=\"inline-block ml-2 align-middle\" onClick={() => setIsEdit(!isEdit)}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                        <path d=\"M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z\" />\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n\r\n\r\n            <div className=\"flex items-center justify-center h-72 w-72 shadow-sm rounded-xl hover:shadow-lg transition-shadow \">\r\n                {renderBalance()}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { useSelector } from 'react-redux';\r\n\r\n//data setup\r\nconst currentMonth = new Date().getMonth();\r\nconst calRecentMonth = diff => {\r\n    const date = new Date();\r\n    date.setMonth(currentMonth - diff);\r\n    return date.toLocaleString('default', { month: 'long' });\r\n}\r\nconst recentMonths = [calRecentMonth(2), calRecentMonth(1), calRecentMonth(0)];\r\n\r\n\r\nexport const RecentProfitLoss = () => {\r\n    const { cashInData, cashOutData } = useSelector(state => state.cashInOut);\r\n    \r\n    const calProLossArr = () => {\r\n        let diffArr = [];\r\n        for(let i = currentMonth -2; i <= currentMonth; i++){\r\n            //cashIn; \r\n            //get filtered array by month\r\n            const sumInArr = cashInData.filter(data => new Date(data.date).getMonth() === i);\r\n            //sum up all OBJECT.amount in array\r\n            const totalSumIn = sumInArr.reduce((sum,curData) => ({amount: sum.amount + curData.amount}));\r\n\r\n            //cashOut\r\n            const sumOutArr = cashOutData.filter(data => new Date(data.date).getMonth() === i);\r\n            const totalSumOut = sumOutArr.reduce((sum,curData) => ({amount: sum.amount + curData.amount}));\r\n\r\n            diffArr.push(totalSumIn.amount - totalSumOut.amount);\r\n        }\r\n        return diffArr;\r\n    }\r\n\r\n    //line chart config\r\n    const lineState = {\r\n        labels: recentMonths,\r\n        datasets: [\r\n            {\r\n                label: 'Profit vs Loss',\r\n                fill: true,\r\n                lineTension: 0.5,\r\n                backgroundColor: '#C4B5FD',\r\n                borderColor: '#1F2937',\r\n                borderWidth: 3,\r\n                data: calProLossArr()\r\n            }\r\n        ]\r\n    }\r\n    //main render\r\n    return (\r\n        <div className=\"mt-5\">\r\n            <h3 className=\"text-xl font-bold\">Recent <span className=\"text-green-600 font-bold\">Profit</span> vs <span className=\"text-red-500 font-bold\">Loss</span></h3>\r\n            <Line\r\n                data={lineState}\r\n                options={{\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Recent Profit.vs.Loss',\r\n                        fontSize: 20\r\n                    },\r\n                    legend: {\r\n                        display: true,\r\n                        position: 'right'\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Range } from './Range';\r\nimport { PieChartOut } from './PieChartOut';\r\nimport { PieChartIn } from './PieChartIn';\r\nimport { ProfitLoss } from './ProfitLoss';\r\nimport { Balance } from './Balance';\r\nimport { RecentProfitLoss } from './RecentProfitLoss';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst rangeList = ['This Month', 'Last Month', 'Last Three Month'];\r\n\r\n\r\nexport const Dashboard = () => {\r\n    const [range, setRange] = useState(rangeList[0]);\r\n    const { cashInData, cashOutData } = useSelector(state => state.cashInOut);\r\n\r\n    let rangedCashInData, rangedCashOutData = [];\r\n    switch(range){\r\n        //This Month\r\n        case rangeList[0]: {\r\n            rangedCashInData = cashInData.filter(data => new Date(data.date).getMonth() === new Date().getMonth());\r\n            rangedCashOutData = cashOutData.filter(data => new Date(data.date).getMonth() === new Date().getMonth());\r\n            break;\r\n        }\r\n        //Last Month\r\n        case rangeList[1]: {\r\n            rangedCashInData = cashInData.filter(el => new Date(el.date).getMonth() === new Date().getMonth() - 1);\r\n            rangedCashOutData = cashOutData.filter(el => new Date(el.date).getMonth() === new Date().getMonth() - 1);\r\n            break;\r\n        }\r\n        //Last Three Month\r\n        case rangeList[2]: {\r\n            rangedCashInData = cashInData.filter(el => new Date(el.date).getMonth() >= new Date().getMonth() - 3);\r\n            rangedCashOutData = cashOutData.filter(el => new Date(el.date).getMonth() >= new Date().getMonth() - 3);\r\n            break;\r\n        }\r\n        default: \r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <header className=\"bg-white shadow\">\r\n                <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\r\n                    <h1 className=\"text-3xl font-bold text-gray-900\">Dashboard</h1>\r\n                </div>\r\n            </header>\r\n\r\n            <main>\r\n                <div className=\" max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n                    <div className=\"px-4 py-6 sm:px-0\">\r\n                        <div className=\"border-2 border-gray-300 bg-white rounded-lg p-3\" >\r\n                            <Range onRangeChange={setRange} range={range} />\r\n\r\n\r\n                            <div className=\"flex flex-wrap mt-10 items-center\">\r\n                                <PieChartOut cashData={rangedCashOutData} />\r\n                                <PieChartIn cashData={rangedCashInData} />\r\n                                <ProfitLoss cashInData={rangedCashInData} cashOutData={rangedCashOutData} />\r\n                                <Balance />\r\n                                <RecentProfitLoss />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n}","import React, { Fragment } from 'react';\r\nimport { Listbox, Transition } from '@headlessui/react'\r\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid'\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nfunction classNames(...classes) {\r\n    return classes.filter(Boolean).join(' ')\r\n}\r\n\r\nexport const InCategory = props => {\r\n    const { cashInCategory } = useSelector(state => state.category);\r\n    const { selectedCategory, setSelectedCategory } = props;\r\n\r\n    //main render \r\n    return (\r\n        <Listbox value={selectedCategory} onChange={setSelectedCategory}>\r\n            {({ open }) => (\r\n                <>\r\n                    <div className=\"relative\">\r\n                        <Listbox.Button className=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500\">\r\n                            <span className=\"flex items-center\">\r\n                                <span className=\"ml-3 block truncate\">{selectedCategory}</span>\r\n                            </span>\r\n                            <span className=\"ml-3 absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\r\n                                <SelectorIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\r\n                            </span>\r\n                        </Listbox.Button>\r\n\r\n                        <Transition\r\n                            show={open}\r\n                            as={Fragment}\r\n                            leave=\"transition ease-in duration-100\"\r\n                            leaveFrom=\"opacity-100\"\r\n                            leaveTo=\"opacity-0\"\r\n                        >\r\n                            <Listbox.Options\r\n                                static\r\n                                className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-56 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\r\n                            >\r\n                                {cashInCategory.map((rangeInMap, index) => (\r\n                                    <Listbox.Option\r\n                                        key={index}\r\n                                        className={({ active }) =>\r\n                                            classNames(\r\n                                                active ? 'text-white bg-indigo-600' : 'text-gray-900',\r\n                                                'cursor-default select-none relative py-2 pl-3 pr-9'\r\n                                            )\r\n                                        }\r\n                                        value={rangeInMap}\r\n                                    >\r\n                                        {({ selected, active }) => (\r\n                                            <>\r\n                                                <div className=\"flex items-center\">\r\n                                                    <span className={classNames(selected ? 'font-semibold' : 'font-normal', 'ml-3 block truncate')} >\r\n                                                        {rangeInMap}\r\n                                                    </span>\r\n                                                </div>\r\n\r\n                                                {selected ? (\r\n                                                    <span\r\n                                                        className={classNames(\r\n                                                            active ? 'text-white' : 'text-indigo-600',\r\n                                                            'absolute inset-y-0 right-0 flex items-center pr-4'\r\n                                                        )}\r\n                                                    >\r\n                                                        <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                                                    </span>\r\n                                                ) : null}\r\n                                            </>\r\n                                        )}\r\n                                    </Listbox.Option>\r\n                                ))}\r\n                            </Listbox.Options>\r\n                        </Transition>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </Listbox>\r\n\r\n    )\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\nimport { cashInData } from './cashInDataEg';\r\n\r\n\r\n//[{...}]\r\nconst initialState = cashInData;\r\n\r\nconst cashInSlice = createSlice({\r\n    name: 'cashIn',\r\n    initialState,\r\n    reducers: {\r\n        addCashIn: (state, action) => {\r\n            state.push(action.payload);     \r\n        }\r\n    }\r\n});\r\n\r\nexport const { addCashIn } = cashInSlice.actions;\r\nexport default cashInSlice.reducer;","//example data for cashIn\r\n//These data shall be stored in mongoDB ATLAS in real life\r\n\r\n//date docs: //MONTH START from 0 \r\nexport const cashInData = [\r\n    {\r\n        category: 'Comission',\r\n        reference: 'from David',\r\n        detail: 'Ads running on our facebook',\r\n        amount: 790,\r\n        date: new Date(2021, 4, 1, 13, 10, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Sales',\r\n        reference: 'from CJ',\r\n        detail: 'Promotion package',\r\n        amount: 259,\r\n        date: new Date(2021, 4, 3, 9, 59, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Sales',\r\n        reference: 'from Lin',\r\n        detail: 'Two Number nine large',\r\n        amount: 499,\r\n        date: new Date(2021, 4, 4, 10, 29, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Bonus',\r\n        reference: 'from company',\r\n        detail: '',\r\n        amount: 500,\r\n        date: new Date(2021, 4, 9, 15, 12, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Sales',\r\n        reference: 'from Jamie Oliver',\r\n        detail: 'Promotion pack',\r\n        amount: 790,\r\n        date: new Date(2021, 4, 13, 12, 10, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Sales',\r\n        reference: 'from Jenny',\r\n        detail: '',\r\n        amount: 238,\r\n        date: new Date(2021, 4, 13, 14, 10, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Sales',\r\n        reference: 'from Jinie',\r\n        detail: 'Package CA',\r\n        amount: 920,\r\n        date: new Date(2021, 4, 17, 19, 38, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Investment',\r\n        reference: 'from CIMB',\r\n        detail: 'Investment return from Plantation Project',\r\n        amount: 200,\r\n        date: new Date(2021, 4, 20, 14, 10, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Sales',\r\n        reference: 'from Jayden',\r\n        detail: '',\r\n        amount: 578,\r\n        date: new Date(2021, 4, 23, 18, 20, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Sales',\r\n        reference: 'from Kate',\r\n        detail: 'Package BA',\r\n        amount: 670,\r\n        date: new Date(2021, 4, 27, 9, 38, 0, 0).toDateString()\r\n    },\r\n\r\n\r\n    {\r\n        category: 'Sales',\r\n        reference: 'from Joe',\r\n        detail: '',\r\n        amount: 250,\r\n        date: new Date(2021, 5, 2, 9, 29, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Investment',\r\n        reference: 'from CIMB',\r\n        detail: 'Investment return from Plantation Project',\r\n        amount: 200,\r\n        date: new Date(2021, 5, 8, 10, 30, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Sales',\r\n        reference: 'from Friez',\r\n        detail: 'Sales income to Friez from KL',\r\n        amount: 512,\r\n        date: new Date(2021, 5, 8, 12, 37, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Investment',\r\n        reference: 'from CIMB',\r\n        detail: '',\r\n        amount: 100,\r\n        date: new Date(2021, 5, 10, 9, 29, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Sales',\r\n        reference: 'from Alice',\r\n        detail: 'Package A sales to Alice',\r\n        amount: 900,\r\n        date: new Date(2021, 5, 12, 9, 29, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Sales',\r\n        reference: 'from Jim',\r\n        detail: 'Promotion Sales to Jim (new customer)',\r\n        amount: 200,\r\n        date: new Date(2021, 5, 14, 10, 9, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Comission',\r\n        reference: 'from Jenny',\r\n        detail: 'Ads promoting',\r\n        amount: 240,\r\n        date: new Date(2021, 5, 15, 20, 38, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Sales',\r\n        reference: 'from Tim',\r\n        detail: '',\r\n        amount: 129,\r\n        date: new Date(2021, 5, 16, 14, 0, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Sales',\r\n        reference: 'from Friez',\r\n        detail: 'Returning purchases from Friez',\r\n        amount: 299,\r\n        date: new Date(2021, 5, 20, 10, 10, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Investment',\r\n        reference: 'from RHB Bank',\r\n        detail: 'Investment Return for Real Estate X Project',\r\n        amount: 100,\r\n        date: new Date(2021, 5, 25, 0, 0, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Sales',\r\n        reference: 'from Ben',\r\n        detail: '',\r\n        amount: 309,\r\n        date: new Date(2021, 5, 26, 10, 25, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Sales',\r\n        reference: 'from Alin',\r\n        detail: '',\r\n        amount: 299,\r\n        date: new Date(2021, 5, 28, 10, 10, 0, 0).toDateString()\r\n    },\r\n\r\n\r\n    {\r\n        category: 'Comission',\r\n        reference: 'from Tim',\r\n        detail: 'comission for running ads on our page',\r\n        amount: 450,\r\n        date: new Date(2021, 6, 1, 0, 0, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Sales',\r\n        reference: 'from Friez',\r\n        detail: '',\r\n        amount: 299,\r\n        date: new Date(2021, 6, 2, 12, 18, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Sales',\r\n        reference: 'from Jenice',\r\n        detail: '',\r\n        amount: 350,\r\n        date: new Date(2021, 6, 3, 8, 0, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Bonus',\r\n        reference: 'from company',\r\n        detail: 'Bonus for June',\r\n        amount: 388,\r\n        date: new Date(2021, 6, 4, 10, 39, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Sales',\r\n        reference: 'from Jeremy',\r\n        detail: 'Promotion Package',\r\n        amount: 700,\r\n        date: new Date(2021, 6, 6, 10, 39, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Comission',\r\n        reference: 'from Danny Koo',\r\n        detail: 'Run ads',\r\n        amount: 499,\r\n        date: new Date(2021, 6, 4, 10, 39, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Comission',\r\n        reference: 'from Jeremy',\r\n        detail: 'Run ads',\r\n        amount: 299,\r\n        date: new Date(2021, 7, 4, 10, 39, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Sales',\r\n        reference: 'from Jeremy',\r\n        detail: 'Promotion Package',\r\n        amount: 700,\r\n        date: new Date(2021, 7, 6, 10, 39, 0, 0).toDateString()\r\n    },\r\n];","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    cashInCategory: ['Sales', 'Comission', 'Bonus', 'Investment'],\r\n    cashOutCategory: ['Stock','Rent','Transportation']\r\n}\r\n\r\nconst categorySlice = createSlice({\r\n    name: 'category',\r\n    initialState,\r\n    reducers: {\r\n        addCashInCategory: (state,action) => {\r\n            state.cashInCategory.push(action.payload);\r\n        },\r\n        \r\n        addCashOutCategory: (state,action) => {\r\n            state.cashOutCategory.push(action.payload);\r\n        }\r\n    }\r\n});\r\n\r\nexport const { addCashInCategory, addCashOutCategory } = categorySlice.actions;\r\nexport default categorySlice.reducer;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { InCategory } from './InCategory';\r\nimport { addCashIn } from './cashInSlice';\r\nimport { updateBalance } from '../../app/balanceSlice';\r\nimport { addCashInCategory } from '../../app/categorySlice';\r\n\r\nconst initialForm = {\r\n    category: '',\r\n    reference: '',\r\n    detail: '',\r\n    amount: 0,\r\n    date: new Date().toDateString()\r\n}\r\n\r\nexport const CashIn = () => {\r\n    const { cashInCategory } = useSelector(state => state.category);\r\n    const [selectedCategory, setSelectedCategory] = useState(cashInCategory[0]);\r\n    const dispatch = useDispatch();\r\n    const alertRef = useRef(null);\r\n    const successRef = useRef(null);\r\n    const [ form, setForm ] = useState(initialForm);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [showSuccess, setShowSuccess] = useState(false);\r\n\r\n    //show alert effect\r\n    useEffect(() => {\r\n        let hideTimeOut;\r\n        const show = () => {\r\n            hideTimeOut = setTimeout(() => {\r\n                alertRef.current.style.display = 'none';\r\n                setShowAlert(false);\r\n            }, 3000);\r\n        }\r\n\r\n        if (showAlert) {\r\n            alertRef.current.style.display = 'flex';\r\n            show();\r\n        }\r\n\r\n        return () => clearTimeout(hideTimeOut);\r\n    }, [showAlert]);\r\n\r\n    //show success effect\r\n    useEffect(() => {\r\n        let hideTimeOut;\r\n        const show = () => {\r\n            hideTimeOut = setTimeout(() => {\r\n                successRef.current.style.display = 'none';\r\n                setShowSuccess(false);\r\n            }, 3000);\r\n        }\r\n\r\n        if (showSuccess) {\r\n            successRef.current.style.display = 'flex';\r\n            show();\r\n        }\r\n\r\n        return () => clearTimeout(hideTimeOut);\r\n    }, [showSuccess]);\r\n\r\n\r\n    //handle new category\r\n    const addNewCategory = () => {\r\n        const categoryName = prompt('Insert Category Name:');\r\n        if(categoryName)dispatch(addCashInCategory(categoryName));\r\n    }\r\n\r\n    //handle submit\r\n    const saveRecord = () => {\r\n        if (form.reference && form.amount) {\r\n            //if we pass form directly which react couldn't promise the update will be updated immediately\r\n            //it might dispatch the data before 'setForm' is performed\r\n            const newRecord = {...form, category: selectedCategory};\r\n            \r\n            dispatch(addCashIn(newRecord));\r\n            dispatch(updateBalance(newRecord.amount));\r\n            //clear input field\r\n            setForm(initialForm);\r\n            setShowSuccess(true);\r\n        }\r\n        else setShowAlert(true);\r\n    }\r\n\r\n    //render alert\r\n    const renderAlert = () => {\r\n        return (\r\n            <div className=\"hidden w-full max-w-sm mx-auto overflow-hidden bg-white rounded-lg shadow-md dark:bg-gray-800 fixed right-5 bottom-5 \"\r\n                ref={alertRef}\r\n            >\r\n                <div className=\"flex items-center justify-center w-12 bg-red-500\">\r\n                    <svg className=\"w-6 h-6 text-white fill-current\" viewBox=\"0 0 40 40\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M20 3.36667C10.8167 3.36667 3.3667 10.8167 3.3667 20C3.3667 29.1833 10.8167 36.6333 20 36.6333C29.1834 36.6333 36.6334 29.1833 36.6334 20C36.6334 10.8167 29.1834 3.36667 20 3.36667ZM19.1334 33.3333V22.9H13.3334L21.6667 6.66667V17.1H27.25L19.1334 33.3333Z\" />\r\n                    </svg>\r\n                </div>\r\n\r\n                <div className=\"px-4 py-2 -mx-3\">\r\n                    <div className=\"mx-3\">\r\n                        <span className=\"font-semibold text-red-500 dark:text-red-400\">Error</span>\r\n                        <p className=\"text-sm text-gray-600 dark:text-gray-200\">Required input is empty</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //render success\r\n    const renderSuccess = () => {\r\n        return (\r\n\r\n            <div className=\"hidden w-full max-w-sm mx-auto overflow-hidden bg-white rounded-lg shadow-md dark:bg-gray-800 fixed right-5 bottom-5 \"\r\n                ref={successRef}\r\n            >\r\n                <div className=\"flex items-center justify-center w-12 bg-green-500\">\r\n                    <svg className=\"w-6 h-6 text-white fill-current\" viewBox=\"0 0 40 40\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M20 3.33331C10.8 3.33331 3.33337 10.8 3.33337 20C3.33337 29.2 10.8 36.6666 20 36.6666C29.2 36.6666 36.6667 29.2 36.6667 20C36.6667 10.8 29.2 3.33331 20 3.33331ZM16.6667 28.3333L8.33337 20L10.6834 17.65L16.6667 23.6166L29.3167 10.9666L31.6667 13.3333L16.6667 28.3333Z\" />\r\n                    </svg>\r\n                </div>\r\n\r\n                <div className=\"px-4 py-2 -mx-3\">\r\n                    <div className=\"mx-3\">\r\n                        <span className=\"font-semibold text-green-500 dark:text-green-400\">Success</span>\r\n                        <p className=\"text-sm text-gray-600 dark:text-gray-200\">New record has been saved!</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    //render amountInput\r\n    const renderCashInput = () => {\r\n        return (\r\n            <div>\r\n                <label htmlFor=\"price\" className=\"block text-md font-medium text-white\">\r\n                    Amount\r\n                </label>\r\n                <div className=\"mt-1 relative rounded-md\">\r\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                        <span className=\"text-gray-400\">$</span>\r\n                    </div>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"price\"\r\n                        id=\"price\"\r\n                        className=\"block w-full pl-7 pr-12 rounded-lg border-transparent flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\r\n                        placeholder=\"0.00\"\r\n                        onChange={e => setForm({...form, amount: +e.target.value})}\r\n                    />\r\n                    <div className=\"absolute inset-y-0 right-0 flex items-center\">\r\n                        <label htmlFor=\"currency\" className=\"sr-only\">\r\n                            Currency\r\n                        </label>\r\n                        <select\r\n                            id=\"currency\"\r\n                            name=\"currency\"\r\n                            className=\" h-full py-0 pl-2 pr-7 border-transparent bg-transparent text-gray-500 sm:text-sm rounded-md\"\r\n                        >\r\n                            <option>MYR</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //main render\r\n    return (\r\n        <div className=\"dark\">\r\n            {renderAlert()}\r\n            {renderSuccess()}\r\n            <header className=\"bg-white shadow\">\r\n                <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\r\n                    <h1 className=\"text-3xl font-bold text-gray-900\">Cash In</h1>\r\n                </div>\r\n            </header>\r\n\r\n\r\n            <main>\r\n\r\n                <div className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n                    <div className=\"px-4 py-6 sm:px-0\">\r\n                        <button\r\n                            onClick={() => addNewCategory()}\r\n                            className=\"bg-indigo-600 hover:bg-indigo-700 focus:ring-indigo-500 focus:ring-offset-indigo-200 text-white p-1 px-2 rounded-md\"\r\n                        >\r\n                            Add New Category\r\n                        </button>\r\n                        <div className=\"border-2 border-gray-300 rounded-lg flex\" >\r\n\r\n\r\n                            <div className=\"flex w-full h-full space-x-3\">\r\n                                <div className=\"w-full px-5 py-10 mx-auto bg-white rounded-lg shadow dark:bg-gray-800\">\r\n\r\n\r\n                                    <div className=\"mb-6 text-3xl font-light text-center text-gray-800 dark:text-white\">\r\n                                        Cash-in Record\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"grid max-w-xl grid-cols-2 gap-4 m-auto\">\r\n\r\n                                        <div className=\"col-span-2 lg:col-span-1\">\r\n                                            <InCategory selectedCategory={selectedCategory} setSelectedCategory={setSelectedCategory} />\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"col-span-2 lg:col-span-1\">\r\n                                            <div className=\" relative \">\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    id=\"contact-form-email\"\r\n                                                    className=\" rounded-lg border-transparent flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\r\n                                                    placeholder=\"Reference\"\r\n                                                    onChange={e => setForm({...form, reference: e.target.value})}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-span-2\">\r\n                                            <label className=\"text-gray-700\" htmlFor=\"name\">\r\n                                                <textarea\r\n                                                    className=\"flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 rounded-lg text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\r\n                                                    id=\"comment\"\r\n                                                    placeholder=\"Detail\" name=\"detail\" rows=\"5\" cols=\"40\"\r\n                                                    onChange={e => setForm({...form, detail: e.target.value})}\r\n                                                >\r\n                                                </textarea>\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"col-span-2\">\r\n                                            {renderCashInput()}\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"col-span-2 text-right\">\r\n                                            <button\r\n                                                className=\"py-2 px-4  bg-indigo-600 hover:bg-indigo-700 focus:ring-indigo-500 focus:ring-offset-indigo-200 text-white w-full transition ease-in duration-200 text-center text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2  rounded-lg \"\r\n                                                onClick={() => saveRecord()}>\r\n                                                Save\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n\r\n\r\n        </div>\r\n    )\r\n}","import React, { Fragment } from 'react';\r\nimport { Listbox, Transition } from '@headlessui/react'\r\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid'\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nfunction classNames(...classes) {\r\n    return classes.filter(Boolean).join(' ')\r\n}\r\n\r\nexport const OutCategory = props => {\r\n    const { cashOutCategory } = useSelector(state => state.category);\r\n    const { selectedCategory, setSelectedCategory } = props;\r\n\r\n    //main render \r\n    return (\r\n        <Listbox value={selectedCategory} onChange={setSelectedCategory}>\r\n            {({ open }) => (\r\n                <>\r\n                    <div className=\"relative\">\r\n                        <Listbox.Button className=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500\">\r\n                            <span className=\"flex items-center\">\r\n                                <span className=\"ml-3 block truncate\">{selectedCategory}</span>\r\n                            </span>\r\n                            <span className=\"ml-3 absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\r\n                                <SelectorIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\r\n                            </span>\r\n                        </Listbox.Button>\r\n\r\n                        <Transition\r\n                            show={open}\r\n                            as={Fragment}\r\n                            leave=\"transition ease-in duration-100\"\r\n                            leaveFrom=\"opacity-100\"\r\n                            leaveTo=\"opacity-0\"\r\n                        >\r\n                            <Listbox.Options\r\n                                static\r\n                                className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-56 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\r\n                            >\r\n                                {cashOutCategory.map((rangeInMap, index) => (\r\n                                    <Listbox.Option\r\n                                        key={index}\r\n                                        className={({ active }) =>\r\n                                            classNames(\r\n                                                active ? 'text-white bg-indigo-600' : 'text-gray-900',\r\n                                                'cursor-default select-none relative py-2 pl-3 pr-9'\r\n                                            )\r\n                                        }\r\n                                        value={rangeInMap}\r\n                                    >\r\n                                        {({ selected, active }) => (\r\n                                            <>\r\n                                                <div className=\"flex items-center\">\r\n                                                    <span className={classNames(selected ? 'font-semibold' : 'font-normal', 'ml-3 block truncate')} >\r\n                                                        {rangeInMap}\r\n                                                    </span>\r\n                                                </div>\r\n\r\n                                                {selected ? (\r\n                                                    <span\r\n                                                        className={classNames(\r\n                                                            active ? 'text-white' : 'text-indigo-600',\r\n                                                            'absolute inset-y-0 right-0 flex items-center pr-4'\r\n                                                        )}\r\n                                                    >\r\n                                                        <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                                                    </span>\r\n                                                ) : null}\r\n                                            </>\r\n                                        )}\r\n                                    </Listbox.Option>\r\n                                ))}\r\n                            </Listbox.Options>\r\n                        </Transition>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </Listbox>\r\n\r\n    )\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\nimport { cashOutData } from './cashOutDataEg';\r\n\r\nconst initialState = cashOutData;\r\n\r\nconst cashOutSlice = createSlice({\r\n    name: 'cashOut',\r\n    initialState,\r\n    reducers: {\r\n        addCashOut: (state,action) => {\r\n            state.push(action.payload);\r\n        }\r\n    }\r\n});\r\n\r\nexport const { addCashOut } = cashOutSlice.actions;\r\nexport default cashOutSlice.reducer;","//example data for cashOut\r\n//These data shall be stored in mongoDB ATLAS in real life\r\n\r\n//date docs: //MONTH START from 0 \r\nexport const cashOutData = [\r\n    {\r\n        category: 'Rent',\r\n        reference: 'to Raymond',\r\n        detail: 'monthly warehouse rent',\r\n        amount: 1200,\r\n        date: new Date(2021, 4, 5, 9, 29, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Stock',\r\n        reference: 'to Jinny Trading',\r\n        detail: '10 premium wireless mouse',\r\n        amount: 1000,\r\n        date: new Date(2021, 4, 15, 15, 10, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Stock',\r\n        reference: 'to Quick Train Trading',\r\n        detail: '10 wireless keyboard',\r\n        amount: 2000,\r\n        date: new Date(2021, 4, 15, 10, 0, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Rent',\r\n        reference: 'to Raymond',\r\n        detail: 'monthly warehouse rent',\r\n        amount: 1200,\r\n        date: new Date(2021, 5, 5, 9, 11, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Stock',\r\n        reference: 'to Jinny Trading',\r\n        detail: '20 deskmat',\r\n        amount: 1000,\r\n        date: new Date(2021, 5, 15, 9, 29, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Transportation',\r\n        reference: 'grab fee for errand',\r\n        detail: '',\r\n        amount: 250,\r\n        date: new Date(2021, 5, 21, 14, 0, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Rent',\r\n        reference: 'to Raymond',\r\n        detail: 'montly warehosue rent',\r\n        amount: 1200,\r\n        date: new Date(2021, 6, 1, 10, 28, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Stock',\r\n        reference: 'to Jacky',\r\n        detail: '10 premium mousepad',\r\n        amount: 500,\r\n        date: new Date(2021, 6, 2, 10, 28, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Stock',\r\n        reference: 'to Jinny Trading',\r\n        detail: '5 wired mouse',\r\n        amount: 150,\r\n        date: new Date(2021, 6, 4, 11, 28, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Stock',\r\n        reference: 'to Jinny Trading',\r\n        detail: '5 wired mouse',\r\n        amount: 200,\r\n        date: new Date(2021, 7, 4, 11, 28, 0, 0).toDateString()\r\n    },\r\n    {\r\n        category: 'Rent',\r\n        reference: 'to Raymond',\r\n        detail: 'montly warehosue rent',\r\n        amount: 1200,\r\n        date: new Date(2021, 7, 1, 10, 28, 0, 0).toDateString()\r\n    },\r\n];","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { OutCategory } from './OutCategory';\r\nimport { addCashOut } from './cashOutSlice';\r\nimport { updateBalance } from '../../app/balanceSlice';\r\nimport { addCashOutCategory } from '../../app/categorySlice';\r\n\r\nconst initialForm = {\r\n    category: '',\r\n    reference: '',\r\n    detail: '',\r\n    amount: 0,\r\n    date: new Date().toDateString()\r\n}\r\n\r\nexport const CashOut = () => {\r\n    const { cashOutCategory } = useSelector(state => state.category);\r\n    const [selectedCategory, setSelectedCategory] = useState(cashOutCategory[0]);\r\n    const dispatch = useDispatch();\r\n    const alertRef = useRef(null);\r\n    const successRef = useRef(null);\r\n    const [ form, setForm ] = useState(initialForm);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [showSuccess, setShowSuccess] = useState(false);\r\n\r\n    //show alert effect\r\n    useEffect(() => {\r\n        let hideTimeOut;\r\n        const show = () => {\r\n            hideTimeOut = setTimeout(() => {\r\n                alertRef.current.style.display = 'none';\r\n                setShowAlert(false);\r\n            }, 3000);\r\n        }\r\n\r\n        if (showAlert) {\r\n            alertRef.current.style.display = 'flex';\r\n            show();\r\n        }\r\n\r\n        return () => clearTimeout(hideTimeOut);\r\n    }, [showAlert]);\r\n\r\n    //show success effect\r\n    useEffect(() => {\r\n        let hideTimeOut;\r\n        const show = () => {\r\n            hideTimeOut = setTimeout(() => {\r\n                successRef.current.style.display = 'none';\r\n                setShowSuccess(false);\r\n            }, 3000);\r\n        }\r\n\r\n        if (showSuccess) {\r\n            successRef.current.style.display = 'flex';\r\n            show();\r\n        }\r\n\r\n        return () => clearTimeout(hideTimeOut);\r\n    }, [showSuccess]);\r\n\r\n    //handle new category\r\n    const addNewCategory = () => {\r\n        const categoryName = prompt('Insert Category Name:');\r\n        if (categoryName) dispatch(addCashOutCategory(categoryName));\r\n    }\r\n\r\n    //handle submit\r\n    const saveRecord = () => {\r\n        if (form.reference && form.amount) {\r\n            //if we pass form directly which react couldn't promise the update will be updated immediately\r\n            //it might dispatch the data before 'setForm' is performed\r\n            const newRecord = {...form, category: selectedCategory};\r\n\r\n            dispatch(addCashOut(newRecord));\r\n            dispatch(updateBalance(-newRecord.amount));\r\n            //clear input field\r\n            setForm(initialForm);\r\n            setShowSuccess(true);\r\n        }\r\n\r\n        else setShowAlert(true);\r\n    }\r\n\r\n    //render alert\r\n    const renderAlert = () => {\r\n        return (\r\n            <div className=\"hidden w-full max-w-sm mx-auto overflow-hidden bg-white rounded-lg shadow-md dark:bg-gray-800 fixed right-5 bottom-5 \"\r\n                ref={alertRef}\r\n            >\r\n                <div className=\"flex items-center justify-center w-12 bg-red-500\">\r\n                    <svg className=\"w-6 h-6 text-white fill-current\" viewBox=\"0 0 40 40\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M20 3.36667C10.8167 3.36667 3.3667 10.8167 3.3667 20C3.3667 29.1833 10.8167 36.6333 20 36.6333C29.1834 36.6333 36.6334 29.1833 36.6334 20C36.6334 10.8167 29.1834 3.36667 20 3.36667ZM19.1334 33.3333V22.9H13.3334L21.6667 6.66667V17.1H27.25L19.1334 33.3333Z\" />\r\n                    </svg>\r\n                </div>\r\n\r\n                <div className=\"px-4 py-2 -mx-3\">\r\n                    <div className=\"mx-3\">\r\n                        <span className=\"font-semibold text-red-500 dark:text-red-400\">Error</span>\r\n                        <p className=\"text-sm text-gray-600 dark:text-gray-200\">Required input is empty</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //render success\r\n    const renderSuccess = () => {\r\n        return (\r\n\r\n            <div className=\"hidden w-full max-w-sm mx-auto overflow-hidden bg-white rounded-lg shadow-md dark:bg-gray-800 fixed right-5 bottom-5 \"\r\n                ref={successRef}\r\n            >\r\n                <div className=\"flex items-center justify-center w-12 bg-green-500\">\r\n                    <svg className=\"w-6 h-6 text-white fill-current\" viewBox=\"0 0 40 40\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M20 3.33331C10.8 3.33331 3.33337 10.8 3.33337 20C3.33337 29.2 10.8 36.6666 20 36.6666C29.2 36.6666 36.6667 29.2 36.6667 20C36.6667 10.8 29.2 3.33331 20 3.33331ZM16.6667 28.3333L8.33337 20L10.6834 17.65L16.6667 23.6166L29.3167 10.9666L31.6667 13.3333L16.6667 28.3333Z\" />\r\n                    </svg>\r\n                </div>\r\n\r\n                <div className=\"px-4 py-2 -mx-3\">\r\n                    <div className=\"mx-3\">\r\n                        <span className=\"font-semibold text-green-500 dark:text-green-400\">Success</span>\r\n                        <p className=\"text-sm text-gray-600 dark:text-gray-200\">New record has been saved!</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    //render amountInput\r\n    const renderCashInput = () => {\r\n        return (\r\n            <div>\r\n                <label htmlFor=\"price\" className=\"block text-md font-medium text-white\">\r\n                    Amount\r\n                </label>\r\n                <div className=\"mt-1 relative rounded-md\">\r\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                        <span className=\"text-gray-400\">$</span>\r\n                    </div>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"price\"\r\n                        id=\"price\"\r\n                        className=\"block w-full pl-7 pr-12 rounded-lg border-transparent flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\r\n                        placeholder=\"0.00\"\r\n                        onChange={ e => setForm({...form, amount: +e.target.value})}\r\n                    />\r\n                    <div className=\"absolute inset-y-0 right-0 flex items-center\">\r\n                        <label htmlFor=\"currency\" className=\"sr-only\">\r\n                            Currency\r\n                        </label>\r\n                        <select\r\n                            id=\"currency\"\r\n                            name=\"currency\"\r\n                            className=\" h-full py-0 pl-2 pr-7 border-transparent bg-transparent text-gray-500 sm:text-sm rounded-md\"\r\n                        >\r\n                            <option>MYR</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //main render\r\n    return (\r\n        <div className=\"dark\">\r\n            {renderAlert()}\r\n            {renderSuccess()}\r\n            <header className=\"bg-white shadow\">\r\n                <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\r\n                    <h1 className=\"text-3xl font-bold text-gray-900\">Cash Out</h1>\r\n                </div>\r\n            </header>\r\n\r\n\r\n            <main>\r\n                <div className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\r\n                    <div className=\"px-4 py-6 sm:px-0\">\r\n                        <button\r\n                            onClick={() => addNewCategory()}\r\n                            className=\"bg-indigo-600 hover:bg-indigo-700 focus:ring-indigo-500 focus:ring-offset-indigo-200 text-white p-1 px-2 rounded-md\"\r\n                        >\r\n                            Add New Category\r\n                        </button>\r\n                        <div className=\"border-2 border-gray-300 rounded-lg flex\" >\r\n\r\n\r\n                            <div className=\"flex w-full h-full space-x-3\">\r\n                                <div className=\"w-full px-5 py-10 mx-auto bg-white rounded-lg shadow dark:bg-gray-800\">\r\n\r\n\r\n                                    <div className=\"mb-6 text-3xl font-light text-center text-gray-800 dark:text-white\">\r\n                                        Cash-out Record\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"grid max-w-xl grid-cols-2 gap-4 m-auto\">\r\n\r\n                                        <div className=\"col-span-2 lg:col-span-1\">\r\n                                            <OutCategory selectedCategory={selectedCategory} setSelectedCategory={setSelectedCategory} />\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"col-span-2 lg:col-span-1\">\r\n                                            <div className=\" relative \">\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    id=\"contact-form-email\"\r\n                                                    className=\" rounded-lg border-transparent flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\r\n                                                    placeholder=\"Reference\"\r\n                                                    onChange={e => setForm({...form, reference: e.target.value})}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-span-2\">\r\n                                            <label className=\"text-gray-700\" htmlFor=\"name\">\r\n                                                <textarea\r\n                                                    className=\"flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 rounded-lg text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\r\n                                                    id=\"comment\"\r\n                                                    placeholder=\"Detail\" name=\"detail\" rows=\"5\" cols=\"40\"\r\n                                                    onChange={e => setForm({...form, detail: e.target.value})}\r\n                                                >\r\n                                                </textarea>\r\n                                            </label>\r\n                                        </div>\r\n                                        <div className=\"col-span-2\">\r\n                                            {renderCashInput()}\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"col-span-2 text-right\">\r\n                                            <button\r\n                                                className=\"py-2 px-4  bg-indigo-600 hover:bg-indigo-700 focus:ring-indigo-500 focus:ring-offset-indigo-200 text-white w-full transition ease-in duration-200 text-center text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2  rounded-lg \"\r\n                                                onClick={() => saveRecord()}>\r\n                                                Save\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n\r\n\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const Report = () => {\r\n    const [reportType, setReportType] = useState('cashin');\r\n    const { cashInData, cashOutData } = useSelector(state => state.cashInOut);\r\n    const fromDateRef = useRef(null);\r\n    const toDateRef = useRef(null);\r\n    const [filteredData, setFilteredData] = useState(reportType === 'cashin' ? cashInData : cashOutData);\r\n\r\n    //reset data when type switch \r\n    useEffect(() => {\r\n        setFilteredData(reportType === 'cashin' ? cashInData : cashOutData);\r\n        fromDateRef.current.value = toDateRef.current.value = \"\";\r\n    }, [reportType, cashInData, cashOutData]);\r\n\r\n    //filter event\r\n    const filterData = () => {\r\n        const fromValueString = fromDateRef.current.value;\r\n        const toValueString = toDateRef.current.value;\r\n\r\n        if (!fromValueString || !toValueString) alert('Empty Date Input');\r\n        else {\r\n            const fromValue = new Date(fromValueString);\r\n            const toValue = new Date(toValueString);\r\n            if (fromValue > toValue) alert('Invalid Date');\r\n            else {\r\n                let rangedData = (reportType === 'cashin' ? cashInData : cashOutData);\r\n                rangedData = rangedData.filter(data => fromValue <= new Date(data.date) && new Date(data.date) <= toValue);\r\n                setFilteredData(rangedData);\r\n            }\r\n        }\r\n    }\r\n\r\n    //reset event\r\n    const resetData = () => {\r\n        setFilteredData(reportType === 'cashin' ? cashInData : cashOutData);\r\n        fromDateRef.current.value = toDateRef.current.value = \"\";\r\n    }\r\n\r\n    //render reportType radio button\r\n    const renderTypeButton = () => {\r\n        return (\r\n            <div className=\"p-2 bg-gray-200 rounded-md\">\r\n                <div className=\"bg-gray-200 rounded-lg\">\r\n                    <div className=\"inline-flex rounded-lg\">\r\n                        <input onClick={() => setReportType('cashin')} type=\"radio\" name=\"transaction_type\" id=\"cashin\" hidden />\r\n                        <label\r\n                            htmlFor=\"cashin\"\r\n                            className={`${reportType === 'cashin' ? 'bg-indigo-600 text-white' : 'hover:bg-gray-300'} text-center self-center py-2 px-4 rounded-lg cursor-pointer `}\r\n                        >\r\n                            Cash In\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"inline-flex rounded-lg\">\r\n                        <input onClick={() => setReportType('cashout')} type=\"radio\" name=\"transaction_type\" id=\"cashout\" hidden />\r\n                        <label\r\n                            htmlFor=\"cashout\"\r\n                            className={`${reportType === 'cashout' ? 'bg-indigo-600 text-white' : 'hover:bg-gray-300'} text-center self-center py-2 px-4 rounded-lg cursor-pointer `}\r\n                        >\r\n                            Cash Out\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    //render from-to range input\r\n    const renderRangeInput = () => {\r\n        return (\r\n            <div className=\"ml-10 bg-gray-200 p-2 rounded-md\">\r\n                <label htmlFor=\"fromDate\" className=\"mr-3 font-bold\">From:</label>\r\n                <input type=\"date\" id=\"fromDate\" ref={fromDateRef} />\r\n\r\n                <label htmlFor=\"toDate\" className=\"ml-10 mr-3 font-bold\">To:</label>\r\n                <input type=\"date\" id=\"toDate\" ref={toDateRef} />\r\n\r\n                <button\r\n                    onClick={() => filterData()}\r\n                    className=\"py-2 px-4 ml-5 bg-indigo-600 hover:bg-indigo-700 focus:ring-indigo-500 focus:ring-offset-indigo-200 text-white rounded-md\"\r\n                >\r\n                    Search\r\n                </button>\r\n                <button\r\n                    onClick={() => resetData()}\r\n                    className=\"py-2 px-4 ml-5 bg-indigo-600 hover:bg-indigo-700 focus:ring-indigo-500 focus:ring-offset-indigo-200 text-white rounded-md\"\r\n                >\r\n                    Reset\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //render Data\r\n    const renderTransactions = () => {\r\n        if (filteredData.length === 0) {\r\n            return (\r\n                <tr>\r\n                    <td className=\"text-white\">No Transaction Found</td>\r\n                </tr>\r\n            );\r\n        } else {\r\n            return (\r\n                filteredData.map((transaction, index) => (\r\n                    <tr key={index} >\r\n                        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                            <div>\r\n                                <span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\r\n                                    <span aria-hidden=\"true\" className=\"absolute inset-0 bg-green-200 opacity-50 rounded-full\">\r\n                                    </span>\r\n                                    <span className=\"relative font-bold\">\r\n                                        {transaction.category}\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                        </td>\r\n                        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                            <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                {transaction.reference}\r\n                            </p>\r\n                        </td>\r\n                        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                            <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                {transaction.detail}\r\n                            </p>\r\n                        </td>\r\n                        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                            <span className={`${reportType === 'cashin' ? 'text-green-900' : 'text-red-900'} relative inline-block px-3 py-1 font-semibold leading-tight`}>\r\n                                <span aria-hidden=\"true\" className={`${reportType === 'cashin' ? 'bg-green-200' : 'bg-red-500'} absolute inset-0 opacity-50 rounded-full`}>\r\n                                </span>\r\n                                <span className=\"relative\">\r\n                                    {transaction.amount}\r\n                                </span>\r\n                            </span>\r\n                        </td>\r\n                        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                            <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                {transaction.date}\r\n                            </p>\r\n                        </td>\r\n                    </tr>\r\n                ))\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n\r\n    //main render\r\n    return (\r\n        <div className=\"bg-gray-800\" >\r\n            <header className=\"bg-white shadow\">\r\n                <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\r\n                    <h1 className=\"text-3xl font-bold text-gray-900\">Report</h1>\r\n                </div>\r\n            </header>\r\n\r\n\r\n            <center>\r\n                <div className=\"inline-flex justify-left ml-5 mt-5 items-center\">\r\n                    {renderTypeButton()}\r\n                    {renderRangeInput()}\r\n                </div>\r\n            </center>\r\n\r\n\r\n            <div className=\"container mx-auto px-4 sm:px-8 max-w-3xl\">\r\n                <div className=\"py-2\">\r\n                    <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto overflow-y-scroll h-screen\">\r\n                        <div className=\"inline-block min-w-full shadow rounded-lg overflow-hidden\">\r\n                            <table className=\"min-w-full leading-normal \">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\" className=\"px-5 py-3 bg-white  border-b border-gray-200 text-gray-800  text-left text-sm uppercase font-bold\">\r\n                                            Category\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-5 py-3 bg-white  border-b border-gray-200 text-gray-800  text-left text-sm uppercase font-bold\">\r\n                                            Reference\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-5 py-3 bg-white  border-b border-gray-200 text-gray-800  text-left text-sm uppercase font-bold\">\r\n                                            Detail\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-5 py-3 bg-white  border-b border-gray-200 text-gray-800  text-left text-sm uppercase font-bold\">\r\n                                            Amount (MYR)\r\n                                        </th>\r\n                                        <th scope=\"col\" className=\"px-5 py-3 bg-white  border-b border-gray-200 text-gray-800  text-left text-sm uppercase font-bold\">\r\n                                            Date\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {renderTransactions()}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/appreciate.496a9d10.svg\";","import React from 'react';\r\nimport './App.css';\r\nimport { NavBar } from './components/NavBar/NavBar';\r\nimport { Dashboard } from './components/Dashboard/Dashboard';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { CashIn } from './components/CashIn/CashIn';\r\nimport { CashOut } from './components/CashOut/CashOut';\r\nimport { Report } from './components/Report/Report';\r\nimport appreciate from './img/appreciate.svg';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <NavBar />\r\n\r\n      <Switch>\r\n\r\n        <Route path='/icp-app' exact>\r\n          <div className=\"mt-10\">\r\n            <h3 className=\"text-xl text-center\">Welcome, Khoo</h3>\r\n            <img className=\"mx-auto\" src={appreciate} alt=\"welcome\" />\r\n          </div>\r\n        </Route>\r\n\r\n        <Route path='/dashboard' exact>\r\n          <Dashboard />\r\n        </Route>\r\n\r\n        <Route path='/cashin' exact>\r\n          <CashIn />\r\n        </Route>\r\n\r\n        <Route path='/cashout' exact>\r\n          <CashOut />\r\n        </Route>\r\n\r\n        <Route path='/report' exact>\r\n          <Report />\r\n        </Route>\r\n\r\n      </Switch>\r\n\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\nimport balanceReducer from './balanceSlice';\r\nimport cashInReducer from '../components/CashIn/cashInSlice';\r\nimport cashOutReducer from '../components/CashOut/cashOutSlice';\r\nimport categoryReducer from './categorySlice';\r\n\r\nconst cashInOut = combineReducers({\r\n  cashInData: cashInReducer,\r\n  cashOutData: cashOutReducer\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    balance: balanceReducer,\r\n    category: categoryReducer,\r\n    cashInOut,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}